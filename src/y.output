Terminals unused in grammar

   TRUE
   FALSE
   EQUALS
   COMMA


State 14 conflicts: 1 reduce/reduce
State 24 conflicts: 1 reduce/reduce
State 92 conflicts: 1 shift/reduce
State 93 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog_start $end

    1 prog_start: %empty
    2           | func

    3 func: FUNCTION IDENT SEMICOLON declaration
    4     | func FUNCTION IDENT SEMICOLON declaration

    5 declaration: BEGIN_PARAMS param_list END_PARAMS BEGIN_LOCAL_VAR local_list END_LOCAL_VAR BEGIN_FUNC_BODY body END_FUNC_BODY

    6 param_list: param
    7           | param param_list
    8           | %empty

    9 param: IDENT COLON INT SEMICOLON

   10 local_list: local
   11           | local local_list
   12           | %empty

   13 local: IDENT COLON INT SEMICOLON
   14      | IDENT COLON ARRAY L_BRACKET NUM R_BRACKET TYPE INT SEMICOLON

   15 body: statement_list
   16     | %empty

   17 statement_list: statement
   18               | statement statement_list

   19 statement: if_statement
   20          | while_statement
   21          | assignment
   22          | output
   23          | input
   24          | return_statement
   25          | ifelse_statement
   26          | BREAK

   27 if_statement: IF LEFT_PAREN boolexpression RIGHT_PAREN THEN statement END_IF SEMICOLON

   28 ifelse_statement: IF LEFT_PAREN boolexpression RIGHT_PAREN THEN statement ELSE statement END_IF SEMICOLON

   29 boolexpression: IDENT compare NUM
   30               | IDENT compare IDENT

   31 while_statement: WHILE LEFT_PAREN boolexpression RIGHT_PAREN BEGIN_LOOP statement_list END_LOOP SEMICOLON

   32 assignment: IDENT ASSIGN NUM SEMICOLON
   33           | IDENT ASSIGN IDENT SEMICOLON
   34           | IDENT ASSIGN exp SEMICOLON
   35           | arrayis ASSIGN exp SEMICOLON

   36 arrayis: IDENT L_BRACKET exp R_BRACKET

   37 output: WRITE IDENT SEMICOLON
   38       | WRITE IDENT L_BRACKET exp R_BRACKET SEMICOLON

   39 input: READ IDENT SEMICOLON

   40 exp: exp compare term
   41    | term

   42 compare: EQUAL
   43        | LESS_THAN
   44        | LESS_THAN_EQ
   45        | GREAT_THAN
   46        | GREAT_THAN_EQ
   47        | NOT_EQ

   48 term: factor addop term
   49     | factor mullop term
   50     | factor

   51 addop: PLUS
   52      | MINUS
   53      | UNARY_MINUS

   54 mullop: MULT
   55       | DIV

   56 factor: LEFT_PAREN exp RIGHT_PAREN
   57       | NUM
   58       | IDENT
   59       | func_name

   60 return_statement: RETURN exp SEMICOLON

   61 func_name: IDENT LEFT_PAREN exp RIGHT_PAREN


Terminals, with rules where they appear

$end (0) 0
error (256)
PLUS (258) 51
MINUS (259) 52
MULT (260) 54
DIV (261) 55
LEFT_PAREN (262) 27 28 31 56 61
RIGHT_PAREN (263) 27 28 31 56 61
EQUAL (264) 42
SEMICOLON (265) 3 4 9 13 14 27 28 31 32 33 34 35 37 38 39 60
COLON (266) 9 13 14
TRUE (267)
FALSE (268)
LESS_THAN (269) 43
LESS_THAN_EQ (270) 44
GREAT_THAN (271) 45
GREAT_THAN_EQ (272) 46
NOT_EQ (273) 47
INT (274) 9 13 14
BREAK (275) 26
EQUALS (276)
ARRAY (277) 14
FUNCTION (278) 3 4
RETURN (279) 60
ASSIGN (280) 32 33 34 35
TYPE (281) 14
WHILE (282) 31
BEGIN_LOOP (283) 31
END_LOOP (284) 31
BEGIN_PARAMS (285) 5
ELSE (286) 28
END_PARAMS (287) 5
BEGIN_FUNC_BODY (288) 5
END_FUNC_BODY (289) 5
BEGIN_LOCAL_VAR (290) 5
END_LOCAL_VAR (291) 5
IF (292) 27 28
THEN (293) 27 28
END_IF (294) 27 28
READ (295) 39
WRITE (296) 37 38
COMMA (297)
L_BRACKET (298) 14 36 38
R_BRACKET (299) 14 36 38
IDENT (300) 3 4 9 13 14 29 30 32 33 34 36 37 38 39 58 61
NUM (301) 14 29 32 57
UNARY_MINUS (302) 53
IF_PREC (303)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
prog_start (50)
    on left: 1 2, on right: 0
func (51)
    on left: 3 4, on right: 2 4
declaration (52)
    on left: 5, on right: 3 4
param_list (53)
    on left: 6 7 8, on right: 5 7
param (54)
    on left: 9, on right: 6 7
local_list (55)
    on left: 10 11 12, on right: 5 11
local (56)
    on left: 13 14, on right: 10 11
body (57)
    on left: 15 16, on right: 5
statement_list (58)
    on left: 17 18, on right: 15 18 31
statement (59)
    on left: 19 20 21 22 23 24 25 26, on right: 17 18 27 28
if_statement (60)
    on left: 27, on right: 19
ifelse_statement (61)
    on left: 28, on right: 25
boolexpression (62)
    on left: 29 30, on right: 27 28 31
while_statement (63)
    on left: 31, on right: 20
assignment (64)
    on left: 32 33 34 35, on right: 21
arrayis (65)
    on left: 36, on right: 35
output (66)
    on left: 37 38, on right: 22
input (67)
    on left: 39, on right: 23
exp (68)
    on left: 40 41, on right: 34 35 36 38 40 56 60 61
compare (69)
    on left: 42 43 44 45 46 47, on right: 29 30 40
term (70)
    on left: 48 49 50, on right: 40 41 48 49
addop (71)
    on left: 51 52 53, on right: 48
mullop (72)
    on left: 54 55, on right: 49
factor (73)
    on left: 56 57 58 59, on right: 48 49 50
return_statement (74)
    on left: 60, on right: 24
func_name (75)
    on left: 61, on right: 59


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (prog_start)

    prog_start  go to state 2
    func        go to state 3


State 1

    3 func: FUNCTION . IDENT SEMICOLON declaration

    IDENT  shift, and go to state 4


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 5


State 3

    2 prog_start: func .
    4 func: func . FUNCTION IDENT SEMICOLON declaration

    FUNCTION  shift, and go to state 6

    $default  reduce using rule 2 (prog_start)


State 4

    3 func: FUNCTION IDENT . SEMICOLON declaration

    SEMICOLON  shift, and go to state 7


State 5

    0 $accept: prog_start $end .

    $default  accept


State 6

    4 func: func FUNCTION . IDENT SEMICOLON declaration

    IDENT  shift, and go to state 8


State 7

    3 func: FUNCTION IDENT SEMICOLON . declaration

    BEGIN_PARAMS  shift, and go to state 9

    declaration  go to state 10


State 8

    4 func: func FUNCTION IDENT . SEMICOLON declaration

    SEMICOLON  shift, and go to state 11


State 9

    5 declaration: BEGIN_PARAMS . param_list END_PARAMS BEGIN_LOCAL_VAR local_list END_LOCAL_VAR BEGIN_FUNC_BODY body END_FUNC_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 8 (param_list)

    param_list  go to state 13
    param       go to state 14


State 10

    3 func: FUNCTION IDENT SEMICOLON declaration .

    $default  reduce using rule 3 (func)


State 11

    4 func: func FUNCTION IDENT SEMICOLON . declaration

    BEGIN_PARAMS  shift, and go to state 9

    declaration  go to state 15


State 12

    9 param: IDENT . COLON INT SEMICOLON

    COLON  shift, and go to state 16


State 13

    5 declaration: BEGIN_PARAMS param_list . END_PARAMS BEGIN_LOCAL_VAR local_list END_LOCAL_VAR BEGIN_FUNC_BODY body END_FUNC_BODY

    END_PARAMS  shift, and go to state 17


State 14

    6 param_list: param .
    7           | param . param_list

    IDENT  shift, and go to state 12

    END_PARAMS  reduce using rule 6 (param_list)
    END_PARAMS  [reduce using rule 8 (param_list)]
    $default    reduce using rule 6 (param_list)

    param_list  go to state 18
    param       go to state 14


State 15

    4 func: func FUNCTION IDENT SEMICOLON declaration .

    $default  reduce using rule 4 (func)


State 16

    9 param: IDENT COLON . INT SEMICOLON

    INT  shift, and go to state 19


State 17

    5 declaration: BEGIN_PARAMS param_list END_PARAMS . BEGIN_LOCAL_VAR local_list END_LOCAL_VAR BEGIN_FUNC_BODY body END_FUNC_BODY

    BEGIN_LOCAL_VAR  shift, and go to state 20


State 18

    7 param_list: param param_list .

    $default  reduce using rule 7 (param_list)


State 19

    9 param: IDENT COLON INT . SEMICOLON

    SEMICOLON  shift, and go to state 21


State 20

    5 declaration: BEGIN_PARAMS param_list END_PARAMS BEGIN_LOCAL_VAR . local_list END_LOCAL_VAR BEGIN_FUNC_BODY body END_FUNC_BODY

    IDENT  shift, and go to state 22

    $default  reduce using rule 12 (local_list)

    local_list  go to state 23
    local       go to state 24


State 21

    9 param: IDENT COLON INT SEMICOLON .

    $default  reduce using rule 9 (param)


State 22

   13 local: IDENT . COLON INT SEMICOLON
   14      | IDENT . COLON ARRAY L_BRACKET NUM R_BRACKET TYPE INT SEMICOLON

    COLON  shift, and go to state 25


State 23

    5 declaration: BEGIN_PARAMS param_list END_PARAMS BEGIN_LOCAL_VAR local_list . END_LOCAL_VAR BEGIN_FUNC_BODY body END_FUNC_BODY

    END_LOCAL_VAR  shift, and go to state 26


State 24

   10 local_list: local .
   11           | local . local_list

    IDENT  shift, and go to state 22

    END_LOCAL_VAR  reduce using rule 10 (local_list)
    END_LOCAL_VAR  [reduce using rule 12 (local_list)]
    $default       reduce using rule 10 (local_list)

    local_list  go to state 27
    local       go to state 24


State 25

   13 local: IDENT COLON . INT SEMICOLON
   14      | IDENT COLON . ARRAY L_BRACKET NUM R_BRACKET TYPE INT SEMICOLON

    INT    shift, and go to state 28
    ARRAY  shift, and go to state 29


State 26

    5 declaration: BEGIN_PARAMS param_list END_PARAMS BEGIN_LOCAL_VAR local_list END_LOCAL_VAR . BEGIN_FUNC_BODY body END_FUNC_BODY

    BEGIN_FUNC_BODY  shift, and go to state 30


State 27

   11 local_list: local local_list .

    $default  reduce using rule 11 (local_list)


State 28

   13 local: IDENT COLON INT . SEMICOLON

    SEMICOLON  shift, and go to state 31


State 29

   14 local: IDENT COLON ARRAY . L_BRACKET NUM R_BRACKET TYPE INT SEMICOLON

    L_BRACKET  shift, and go to state 32


State 30

    5 declaration: BEGIN_PARAMS param_list END_PARAMS BEGIN_LOCAL_VAR local_list END_LOCAL_VAR BEGIN_FUNC_BODY . body END_FUNC_BODY

    BREAK   shift, and go to state 33
    RETURN  shift, and go to state 34
    WHILE   shift, and go to state 35
    IF      shift, and go to state 36
    READ    shift, and go to state 37
    WRITE   shift, and go to state 38
    IDENT   shift, and go to state 39

    $default  reduce using rule 16 (body)

    body              go to state 40
    statement_list    go to state 41
    statement         go to state 42
    if_statement      go to state 43
    ifelse_statement  go to state 44
    while_statement   go to state 45
    assignment        go to state 46
    arrayis           go to state 47
    output            go to state 48
    input             go to state 49
    return_statement  go to state 50


State 31

   13 local: IDENT COLON INT SEMICOLON .

    $default  reduce using rule 13 (local)


State 32

   14 local: IDENT COLON ARRAY L_BRACKET . NUM R_BRACKET TYPE INT SEMICOLON

    NUM  shift, and go to state 51


State 33

   26 statement: BREAK .

    $default  reduce using rule 26 (statement)


State 34

   60 return_statement: RETURN . exp SEMICOLON

    LEFT_PAREN  shift, and go to state 52
    IDENT       shift, and go to state 53
    NUM         shift, and go to state 54

    exp        go to state 55
    term       go to state 56
    factor     go to state 57
    func_name  go to state 58


State 35

   31 while_statement: WHILE . LEFT_PAREN boolexpression RIGHT_PAREN BEGIN_LOOP statement_list END_LOOP SEMICOLON

    LEFT_PAREN  shift, and go to state 59


State 36

   27 if_statement: IF . LEFT_PAREN boolexpression RIGHT_PAREN THEN statement END_IF SEMICOLON
   28 ifelse_statement: IF . LEFT_PAREN boolexpression RIGHT_PAREN THEN statement ELSE statement END_IF SEMICOLON

    LEFT_PAREN  shift, and go to state 60


State 37

   39 input: READ . IDENT SEMICOLON

    IDENT  shift, and go to state 61


State 38

   37 output: WRITE . IDENT SEMICOLON
   38       | WRITE . IDENT L_BRACKET exp R_BRACKET SEMICOLON

    IDENT  shift, and go to state 62


State 39

   32 assignment: IDENT . ASSIGN NUM SEMICOLON
   33           | IDENT . ASSIGN IDENT SEMICOLON
   34           | IDENT . ASSIGN exp SEMICOLON
   36 arrayis: IDENT . L_BRACKET exp R_BRACKET

    ASSIGN     shift, and go to state 63
    L_BRACKET  shift, and go to state 64


State 40

    5 declaration: BEGIN_PARAMS param_list END_PARAMS BEGIN_LOCAL_VAR local_list END_LOCAL_VAR BEGIN_FUNC_BODY body . END_FUNC_BODY

    END_FUNC_BODY  shift, and go to state 65


State 41

   15 body: statement_list .

    $default  reduce using rule 15 (body)


State 42

   17 statement_list: statement .
   18               | statement . statement_list

    BREAK   shift, and go to state 33
    RETURN  shift, and go to state 34
    WHILE   shift, and go to state 35
    IF      shift, and go to state 36
    READ    shift, and go to state 37
    WRITE   shift, and go to state 38
    IDENT   shift, and go to state 39

    $default  reduce using rule 17 (statement_list)

    statement_list    go to state 66
    statement         go to state 42
    if_statement      go to state 43
    ifelse_statement  go to state 44
    while_statement   go to state 45
    assignment        go to state 46
    arrayis           go to state 47
    output            go to state 48
    input             go to state 49
    return_statement  go to state 50


State 43

   19 statement: if_statement .

    $default  reduce using rule 19 (statement)


State 44

   25 statement: ifelse_statement .

    $default  reduce using rule 25 (statement)


State 45

   20 statement: while_statement .

    $default  reduce using rule 20 (statement)


State 46

   21 statement: assignment .

    $default  reduce using rule 21 (statement)


State 47

   35 assignment: arrayis . ASSIGN exp SEMICOLON

    ASSIGN  shift, and go to state 67


State 48

   22 statement: output .

    $default  reduce using rule 22 (statement)


State 49

   23 statement: input .

    $default  reduce using rule 23 (statement)


State 50

   24 statement: return_statement .

    $default  reduce using rule 24 (statement)


State 51

   14 local: IDENT COLON ARRAY L_BRACKET NUM . R_BRACKET TYPE INT SEMICOLON

    R_BRACKET  shift, and go to state 68


State 52

   56 factor: LEFT_PAREN . exp RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 52
    IDENT       shift, and go to state 53
    NUM         shift, and go to state 54

    exp        go to state 69
    term       go to state 56
    factor     go to state 57
    func_name  go to state 58


State 53

   58 factor: IDENT .
   61 func_name: IDENT . LEFT_PAREN exp RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 70

    $default  reduce using rule 58 (factor)


State 54

   57 factor: NUM .

    $default  reduce using rule 57 (factor)


State 55

   40 exp: exp . compare term
   60 return_statement: RETURN exp . SEMICOLON

    EQUAL          shift, and go to state 71
    SEMICOLON      shift, and go to state 72
    LESS_THAN      shift, and go to state 73
    LESS_THAN_EQ   shift, and go to state 74
    GREAT_THAN     shift, and go to state 75
    GREAT_THAN_EQ  shift, and go to state 76
    NOT_EQ         shift, and go to state 77

    compare  go to state 78


State 56

   41 exp: term .

    $default  reduce using rule 41 (exp)


State 57

   48 term: factor . addop term
   49     | factor . mullop term
   50     | factor .

    PLUS         shift, and go to state 79
    MINUS        shift, and go to state 80
    MULT         shift, and go to state 81
    DIV          shift, and go to state 82
    UNARY_MINUS  shift, and go to state 83

    $default  reduce using rule 50 (term)

    addop   go to state 84
    mullop  go to state 85


State 58

   59 factor: func_name .

    $default  reduce using rule 59 (factor)


State 59

   31 while_statement: WHILE LEFT_PAREN . boolexpression RIGHT_PAREN BEGIN_LOOP statement_list END_LOOP SEMICOLON

    IDENT  shift, and go to state 86

    boolexpression  go to state 87


State 60

   27 if_statement: IF LEFT_PAREN . boolexpression RIGHT_PAREN THEN statement END_IF SEMICOLON
   28 ifelse_statement: IF LEFT_PAREN . boolexpression RIGHT_PAREN THEN statement ELSE statement END_IF SEMICOLON

    IDENT  shift, and go to state 86

    boolexpression  go to state 88


State 61

   39 input: READ IDENT . SEMICOLON

    SEMICOLON  shift, and go to state 89


State 62

   37 output: WRITE IDENT . SEMICOLON
   38       | WRITE IDENT . L_BRACKET exp R_BRACKET SEMICOLON

    SEMICOLON  shift, and go to state 90
    L_BRACKET  shift, and go to state 91


State 63

   32 assignment: IDENT ASSIGN . NUM SEMICOLON
   33           | IDENT ASSIGN . IDENT SEMICOLON
   34           | IDENT ASSIGN . exp SEMICOLON

    LEFT_PAREN  shift, and go to state 52
    IDENT       shift, and go to state 92
    NUM         shift, and go to state 93

    exp        go to state 94
    term       go to state 56
    factor     go to state 57
    func_name  go to state 58


State 64

   36 arrayis: IDENT L_BRACKET . exp R_BRACKET

    LEFT_PAREN  shift, and go to state 52
    IDENT       shift, and go to state 53
    NUM         shift, and go to state 54

    exp        go to state 95
    term       go to state 56
    factor     go to state 57
    func_name  go to state 58


State 65

    5 declaration: BEGIN_PARAMS param_list END_PARAMS BEGIN_LOCAL_VAR local_list END_LOCAL_VAR BEGIN_FUNC_BODY body END_FUNC_BODY .

    $default  reduce using rule 5 (declaration)


State 66

   18 statement_list: statement statement_list .

    $default  reduce using rule 18 (statement_list)


State 67

   35 assignment: arrayis ASSIGN . exp SEMICOLON

    LEFT_PAREN  shift, and go to state 52
    IDENT       shift, and go to state 53
    NUM         shift, and go to state 54

    exp        go to state 96
    term       go to state 56
    factor     go to state 57
    func_name  go to state 58


State 68

   14 local: IDENT COLON ARRAY L_BRACKET NUM R_BRACKET . TYPE INT SEMICOLON

    TYPE  shift, and go to state 97


State 69

   40 exp: exp . compare term
   56 factor: LEFT_PAREN exp . RIGHT_PAREN

    RIGHT_PAREN    shift, and go to state 98
    EQUAL          shift, and go to state 71
    LESS_THAN      shift, and go to state 73
    LESS_THAN_EQ   shift, and go to state 74
    GREAT_THAN     shift, and go to state 75
    GREAT_THAN_EQ  shift, and go to state 76
    NOT_EQ         shift, and go to state 77

    compare  go to state 78


State 70

   61 func_name: IDENT LEFT_PAREN . exp RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 52
    IDENT       shift, and go to state 53
    NUM         shift, and go to state 54

    exp        go to state 99
    term       go to state 56
    factor     go to state 57
    func_name  go to state 58


State 71

   42 compare: EQUAL .

    $default  reduce using rule 42 (compare)


State 72

   60 return_statement: RETURN exp SEMICOLON .

    $default  reduce using rule 60 (return_statement)


State 73

   43 compare: LESS_THAN .

    $default  reduce using rule 43 (compare)


State 74

   44 compare: LESS_THAN_EQ .

    $default  reduce using rule 44 (compare)


State 75

   45 compare: GREAT_THAN .

    $default  reduce using rule 45 (compare)


State 76

   46 compare: GREAT_THAN_EQ .

    $default  reduce using rule 46 (compare)


State 77

   47 compare: NOT_EQ .

    $default  reduce using rule 47 (compare)


State 78

   40 exp: exp compare . term

    LEFT_PAREN  shift, and go to state 52
    IDENT       shift, and go to state 53
    NUM         shift, and go to state 54

    term       go to state 100
    factor     go to state 57
    func_name  go to state 58


State 79

   51 addop: PLUS .

    $default  reduce using rule 51 (addop)


State 80

   52 addop: MINUS .

    $default  reduce using rule 52 (addop)


State 81

   54 mullop: MULT .

    $default  reduce using rule 54 (mullop)


State 82

   55 mullop: DIV .

    $default  reduce using rule 55 (mullop)


State 83

   53 addop: UNARY_MINUS .

    $default  reduce using rule 53 (addop)


State 84

   48 term: factor addop . term

    LEFT_PAREN  shift, and go to state 52
    IDENT       shift, and go to state 53
    NUM         shift, and go to state 54

    term       go to state 101
    factor     go to state 57
    func_name  go to state 58


State 85

   49 term: factor mullop . term

    LEFT_PAREN  shift, and go to state 52
    IDENT       shift, and go to state 53
    NUM         shift, and go to state 54

    term       go to state 102
    factor     go to state 57
    func_name  go to state 58


State 86

   29 boolexpression: IDENT . compare NUM
   30               | IDENT . compare IDENT

    EQUAL          shift, and go to state 71
    LESS_THAN      shift, and go to state 73
    LESS_THAN_EQ   shift, and go to state 74
    GREAT_THAN     shift, and go to state 75
    GREAT_THAN_EQ  shift, and go to state 76
    NOT_EQ         shift, and go to state 77

    compare  go to state 103


State 87

   31 while_statement: WHILE LEFT_PAREN boolexpression . RIGHT_PAREN BEGIN_LOOP statement_list END_LOOP SEMICOLON

    RIGHT_PAREN  shift, and go to state 104


State 88

   27 if_statement: IF LEFT_PAREN boolexpression . RIGHT_PAREN THEN statement END_IF SEMICOLON
   28 ifelse_statement: IF LEFT_PAREN boolexpression . RIGHT_PAREN THEN statement ELSE statement END_IF SEMICOLON

    RIGHT_PAREN  shift, and go to state 105


State 89

   39 input: READ IDENT SEMICOLON .

    $default  reduce using rule 39 (input)


State 90

   37 output: WRITE IDENT SEMICOLON .

    $default  reduce using rule 37 (output)


State 91

   38 output: WRITE IDENT L_BRACKET . exp R_BRACKET SEMICOLON

    LEFT_PAREN  shift, and go to state 52
    IDENT       shift, and go to state 53
    NUM         shift, and go to state 54

    exp        go to state 106
    term       go to state 56
    factor     go to state 57
    func_name  go to state 58


State 92

   33 assignment: IDENT ASSIGN IDENT . SEMICOLON
   58 factor: IDENT .
   61 func_name: IDENT . LEFT_PAREN exp RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 70
    SEMICOLON   shift, and go to state 107

    SEMICOLON  [reduce using rule 58 (factor)]
    $default   reduce using rule 58 (factor)


State 93

   32 assignment: IDENT ASSIGN NUM . SEMICOLON
   57 factor: NUM .

    SEMICOLON  shift, and go to state 108

    SEMICOLON  [reduce using rule 57 (factor)]
    $default   reduce using rule 57 (factor)


State 94

   34 assignment: IDENT ASSIGN exp . SEMICOLON
   40 exp: exp . compare term

    EQUAL          shift, and go to state 71
    SEMICOLON      shift, and go to state 109
    LESS_THAN      shift, and go to state 73
    LESS_THAN_EQ   shift, and go to state 74
    GREAT_THAN     shift, and go to state 75
    GREAT_THAN_EQ  shift, and go to state 76
    NOT_EQ         shift, and go to state 77

    compare  go to state 78


State 95

   36 arrayis: IDENT L_BRACKET exp . R_BRACKET
   40 exp: exp . compare term

    EQUAL          shift, and go to state 71
    LESS_THAN      shift, and go to state 73
    LESS_THAN_EQ   shift, and go to state 74
    GREAT_THAN     shift, and go to state 75
    GREAT_THAN_EQ  shift, and go to state 76
    NOT_EQ         shift, and go to state 77
    R_BRACKET      shift, and go to state 110

    compare  go to state 78


State 96

   35 assignment: arrayis ASSIGN exp . SEMICOLON
   40 exp: exp . compare term

    EQUAL          shift, and go to state 71
    SEMICOLON      shift, and go to state 111
    LESS_THAN      shift, and go to state 73
    LESS_THAN_EQ   shift, and go to state 74
    GREAT_THAN     shift, and go to state 75
    GREAT_THAN_EQ  shift, and go to state 76
    NOT_EQ         shift, and go to state 77

    compare  go to state 78


State 97

   14 local: IDENT COLON ARRAY L_BRACKET NUM R_BRACKET TYPE . INT SEMICOLON

    INT  shift, and go to state 112


State 98

   56 factor: LEFT_PAREN exp RIGHT_PAREN .

    $default  reduce using rule 56 (factor)


State 99

   40 exp: exp . compare term
   61 func_name: IDENT LEFT_PAREN exp . RIGHT_PAREN

    RIGHT_PAREN    shift, and go to state 113
    EQUAL          shift, and go to state 71
    LESS_THAN      shift, and go to state 73
    LESS_THAN_EQ   shift, and go to state 74
    GREAT_THAN     shift, and go to state 75
    GREAT_THAN_EQ  shift, and go to state 76
    NOT_EQ         shift, and go to state 77

    compare  go to state 78


State 100

   40 exp: exp compare term .

    $default  reduce using rule 40 (exp)


State 101

   48 term: factor addop term .

    $default  reduce using rule 48 (term)


State 102

   49 term: factor mullop term .

    $default  reduce using rule 49 (term)


State 103

   29 boolexpression: IDENT compare . NUM
   30               | IDENT compare . IDENT

    IDENT  shift, and go to state 114
    NUM    shift, and go to state 115


State 104

   31 while_statement: WHILE LEFT_PAREN boolexpression RIGHT_PAREN . BEGIN_LOOP statement_list END_LOOP SEMICOLON

    BEGIN_LOOP  shift, and go to state 116


State 105

   27 if_statement: IF LEFT_PAREN boolexpression RIGHT_PAREN . THEN statement END_IF SEMICOLON
   28 ifelse_statement: IF LEFT_PAREN boolexpression RIGHT_PAREN . THEN statement ELSE statement END_IF SEMICOLON

    THEN  shift, and go to state 117


State 106

   38 output: WRITE IDENT L_BRACKET exp . R_BRACKET SEMICOLON
   40 exp: exp . compare term

    EQUAL          shift, and go to state 71
    LESS_THAN      shift, and go to state 73
    LESS_THAN_EQ   shift, and go to state 74
    GREAT_THAN     shift, and go to state 75
    GREAT_THAN_EQ  shift, and go to state 76
    NOT_EQ         shift, and go to state 77
    R_BRACKET      shift, and go to state 118

    compare  go to state 78


State 107

   33 assignment: IDENT ASSIGN IDENT SEMICOLON .

    $default  reduce using rule 33 (assignment)


State 108

   32 assignment: IDENT ASSIGN NUM SEMICOLON .

    $default  reduce using rule 32 (assignment)


State 109

   34 assignment: IDENT ASSIGN exp SEMICOLON .

    $default  reduce using rule 34 (assignment)


State 110

   36 arrayis: IDENT L_BRACKET exp R_BRACKET .

    $default  reduce using rule 36 (arrayis)


State 111

   35 assignment: arrayis ASSIGN exp SEMICOLON .

    $default  reduce using rule 35 (assignment)


State 112

   14 local: IDENT COLON ARRAY L_BRACKET NUM R_BRACKET TYPE INT . SEMICOLON

    SEMICOLON  shift, and go to state 119


State 113

   61 func_name: IDENT LEFT_PAREN exp RIGHT_PAREN .

    $default  reduce using rule 61 (func_name)


State 114

   30 boolexpression: IDENT compare IDENT .

    $default  reduce using rule 30 (boolexpression)


State 115

   29 boolexpression: IDENT compare NUM .

    $default  reduce using rule 29 (boolexpression)


State 116

   31 while_statement: WHILE LEFT_PAREN boolexpression RIGHT_PAREN BEGIN_LOOP . statement_list END_LOOP SEMICOLON

    BREAK   shift, and go to state 33
    RETURN  shift, and go to state 34
    WHILE   shift, and go to state 35
    IF      shift, and go to state 36
    READ    shift, and go to state 37
    WRITE   shift, and go to state 38
    IDENT   shift, and go to state 39

    statement_list    go to state 120
    statement         go to state 42
    if_statement      go to state 43
    ifelse_statement  go to state 44
    while_statement   go to state 45
    assignment        go to state 46
    arrayis           go to state 47
    output            go to state 48
    input             go to state 49
    return_statement  go to state 50


State 117

   27 if_statement: IF LEFT_PAREN boolexpression RIGHT_PAREN THEN . statement END_IF SEMICOLON
   28 ifelse_statement: IF LEFT_PAREN boolexpression RIGHT_PAREN THEN . statement ELSE statement END_IF SEMICOLON

    BREAK   shift, and go to state 33
    RETURN  shift, and go to state 34
    WHILE   shift, and go to state 35
    IF      shift, and go to state 36
    READ    shift, and go to state 37
    WRITE   shift, and go to state 38
    IDENT   shift, and go to state 39

    statement         go to state 121
    if_statement      go to state 43
    ifelse_statement  go to state 44
    while_statement   go to state 45
    assignment        go to state 46
    arrayis           go to state 47
    output            go to state 48
    input             go to state 49
    return_statement  go to state 50


State 118

   38 output: WRITE IDENT L_BRACKET exp R_BRACKET . SEMICOLON

    SEMICOLON  shift, and go to state 122


State 119

   14 local: IDENT COLON ARRAY L_BRACKET NUM R_BRACKET TYPE INT SEMICOLON .

    $default  reduce using rule 14 (local)


State 120

   31 while_statement: WHILE LEFT_PAREN boolexpression RIGHT_PAREN BEGIN_LOOP statement_list . END_LOOP SEMICOLON

    END_LOOP  shift, and go to state 123


State 121

   27 if_statement: IF LEFT_PAREN boolexpression RIGHT_PAREN THEN statement . END_IF SEMICOLON
   28 ifelse_statement: IF LEFT_PAREN boolexpression RIGHT_PAREN THEN statement . ELSE statement END_IF SEMICOLON

    ELSE    shift, and go to state 124
    END_IF  shift, and go to state 125


State 122

   38 output: WRITE IDENT L_BRACKET exp R_BRACKET SEMICOLON .

    $default  reduce using rule 38 (output)


State 123

   31 while_statement: WHILE LEFT_PAREN boolexpression RIGHT_PAREN BEGIN_LOOP statement_list END_LOOP . SEMICOLON

    SEMICOLON  shift, and go to state 126


State 124

   28 ifelse_statement: IF LEFT_PAREN boolexpression RIGHT_PAREN THEN statement ELSE . statement END_IF SEMICOLON

    BREAK   shift, and go to state 33
    RETURN  shift, and go to state 34
    WHILE   shift, and go to state 35
    IF      shift, and go to state 36
    READ    shift, and go to state 37
    WRITE   shift, and go to state 38
    IDENT   shift, and go to state 39

    statement         go to state 127
    if_statement      go to state 43
    ifelse_statement  go to state 44
    while_statement   go to state 45
    assignment        go to state 46
    arrayis           go to state 47
    output            go to state 48
    input             go to state 49
    return_statement  go to state 50


State 125

   27 if_statement: IF LEFT_PAREN boolexpression RIGHT_PAREN THEN statement END_IF . SEMICOLON

    SEMICOLON  shift, and go to state 128


State 126

   31 while_statement: WHILE LEFT_PAREN boolexpression RIGHT_PAREN BEGIN_LOOP statement_list END_LOOP SEMICOLON .

    $default  reduce using rule 31 (while_statement)


State 127

   28 ifelse_statement: IF LEFT_PAREN boolexpression RIGHT_PAREN THEN statement ELSE statement . END_IF SEMICOLON

    END_IF  shift, and go to state 129


State 128

   27 if_statement: IF LEFT_PAREN boolexpression RIGHT_PAREN THEN statement END_IF SEMICOLON .

    $default  reduce using rule 27 (if_statement)


State 129

   28 ifelse_statement: IF LEFT_PAREN boolexpression RIGHT_PAREN THEN statement ELSE statement END_IF . SEMICOLON

    SEMICOLON  shift, and go to state 130


State 130

   28 ifelse_statement: IF LEFT_PAREN boolexpression RIGHT_PAREN THEN statement ELSE statement END_IF SEMICOLON .

    $default  reduce using rule 28 (ifelse_statement)
