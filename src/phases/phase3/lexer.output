Terminals unused in grammar

   MULT
   DIV
   TRUE
   FALSE
   EQUALS
   ARRAY
   TYPE


State 6 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog_start $end

    1 prog_start: %empty
    2           | func

    3 func: FUNCTION IDENT declaration SEMICOLON
    4     | func func

    5 declaration: BEGIN_PARAMS param_list END_PARAMS BEGIN_LOCAL_VAR local_list END_LOCAL_VAR BEGIN_FUNC_BODY body END_FUNC_BODY

    6 param_list: param
    7           | param_list COMMA param

    8 param: IDENT COLON INT SEMICOLON

    9 local_list: local
   10           | local_list local

   11 local: IDENT COLON INT SEMICOLON

   12 body: statement_list

   13 statement_list: statement
   14               | statement_list statement

   15 statement: if_statement
   16          | while_statement
   17          | assignment
   18          | output
   19          | input
   20          | return_statement

   21 if_statement: IF LEFT_PAREN exp RIGHT_PAREN THEN statement SEMICOLON END_IF SEMICOLON

   22 while_statement: WHILE LEFT_PAREN exp RIGHT_PAREN BEGIN_LOOP statement_list END_LOOP SEMICOLON

   23 assignment: IDENT ASSIGN exp SEMICOLON

   24 output: WRITE exp SEMICOLON

   25 input: READ IDENT SEMICOLON

   26 exp: exp compare term
   27    | term

   28 compare: EQUAL
   29        | LESS_THAN
   30        | LESS_THAN_EQ
   31        | GREAT_THAN
   32        | GREAT_THAN_EQ
   33        | NOT_EQ

   34 term: term addop factor
   35     | factor

   36 addop: PLUS
   37      | MINUS
   38      | UNARY_MINUS

   39 factor: LEFT_PAREN exp RIGHT_PAREN
   40       | NUM
   41       | IDENT

   42 return_statement: RETURN exp SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
NUM (258) 40
PLUS (259) 36
MINUS (260) 37
MULT (261)
DIV (262)
LEFT_PAREN (263) 21 22 39
RIGHT_PAREN (264) 21 22 39
EQUAL (265) 28
SEMICOLON (266) 3 8 11 21 22 23 24 25 42
COLON (267) 8 11
TRUE (268)
FALSE (269)
LESS_THAN (270) 29
LESS_THAN_EQ (271) 30
GREAT_THAN (272) 31
GREAT_THAN_EQ (273) 32
NOT_EQ (274) 33
INT (275) 8 11
EQUALS (276)
ARRAY (277)
FUNCTION (278) 3
RETURN (279) 42
ASSIGN (280) 23
TYPE (281)
WHILE (282) 22
BEGIN_LOOP (283) 22
END_LOOP (284) 22
BEGIN_PARAMS (285) 5
END_PARAMS (286) 5
BEGIN_FUNC_BODY (287) 5
END_FUNC_BODY (288) 5
BEGIN_LOCAL_VAR (289) 5
END_LOCAL_VAR (290) 5
IF (291) 21
THEN (292) 21
END_IF (293) 21
IDENT (294) 3 8 11 23 25 41
READ (295) 25
WRITE (296) 24
COMMA (297) 7
UNARY_MINUS (298) 38
IF_PREC (299)


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
prog_start (46)
    on left: 1 2, on right: 0
func (47)
    on left: 3 4, on right: 2 4
declaration (48)
    on left: 5, on right: 3
param_list (49)
    on left: 6 7, on right: 5 7
param (50)
    on left: 8, on right: 6 7
local_list (51)
    on left: 9 10, on right: 5 10
local (52)
    on left: 11, on right: 9 10
body (53)
    on left: 12, on right: 5
statement_list (54)
    on left: 13 14, on right: 12 14 22
statement (55)
    on left: 15 16 17 18 19 20, on right: 13 14 21
if_statement (56)
    on left: 21, on right: 15
while_statement (57)
    on left: 22, on right: 16
assignment (58)
    on left: 23, on right: 17
output (59)
    on left: 24, on right: 18
input (60)
    on left: 25, on right: 19
exp (61)
    on left: 26 27, on right: 21 22 23 24 26 39 42
compare (62)
    on left: 28 29 30 31 32 33, on right: 26
term (63)
    on left: 34 35, on right: 26 27 34
addop (64)
    on left: 36 37 38, on right: 34
factor (65)
    on left: 39 40 41, on right: 34 35
return_statement (66)
    on left: 42, on right: 20


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (prog_start)

    prog_start  go to state 2
    func        go to state 3


State 1

    3 func: FUNCTION . IDENT declaration SEMICOLON

    IDENT  shift, and go to state 4


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 5


State 3

    2 prog_start: func .
    4 func: func . func

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (prog_start)

    func  go to state 6


State 4

    3 func: FUNCTION IDENT . declaration SEMICOLON

    BEGIN_PARAMS  shift, and go to state 7

    declaration  go to state 8


State 5

    0 $accept: prog_start $end .

    $default  accept


State 6

    4 func: func . func
    4     | func func .

    FUNCTION  shift, and go to state 1

    FUNCTION  [reduce using rule 4 (func)]
    $default  reduce using rule 4 (func)

    func  go to state 6


State 7

    5 declaration: BEGIN_PARAMS . param_list END_PARAMS BEGIN_LOCAL_VAR local_list END_LOCAL_VAR BEGIN_FUNC_BODY body END_FUNC_BODY

    IDENT  shift, and go to state 9

    param_list  go to state 10
    param       go to state 11


State 8

    3 func: FUNCTION IDENT declaration . SEMICOLON

    SEMICOLON  shift, and go to state 12


State 9

    8 param: IDENT . COLON INT SEMICOLON

    COLON  shift, and go to state 13


State 10

    5 declaration: BEGIN_PARAMS param_list . END_PARAMS BEGIN_LOCAL_VAR local_list END_LOCAL_VAR BEGIN_FUNC_BODY body END_FUNC_BODY
    7 param_list: param_list . COMMA param

    END_PARAMS  shift, and go to state 14
    COMMA       shift, and go to state 15


State 11

    6 param_list: param .

    $default  reduce using rule 6 (param_list)


State 12

    3 func: FUNCTION IDENT declaration SEMICOLON .

    $default  reduce using rule 3 (func)


State 13

    8 param: IDENT COLON . INT SEMICOLON

    INT  shift, and go to state 16


State 14

    5 declaration: BEGIN_PARAMS param_list END_PARAMS . BEGIN_LOCAL_VAR local_list END_LOCAL_VAR BEGIN_FUNC_BODY body END_FUNC_BODY

    BEGIN_LOCAL_VAR  shift, and go to state 17


State 15

    7 param_list: param_list COMMA . param

    IDENT  shift, and go to state 9

    param  go to state 18


State 16

    8 param: IDENT COLON INT . SEMICOLON

    SEMICOLON  shift, and go to state 19


State 17

    5 declaration: BEGIN_PARAMS param_list END_PARAMS BEGIN_LOCAL_VAR . local_list END_LOCAL_VAR BEGIN_FUNC_BODY body END_FUNC_BODY

    IDENT  shift, and go to state 20

    local_list  go to state 21
    local       go to state 22


State 18

    7 param_list: param_list COMMA param .

    $default  reduce using rule 7 (param_list)


State 19

    8 param: IDENT COLON INT SEMICOLON .

    $default  reduce using rule 8 (param)


State 20

   11 local: IDENT . COLON INT SEMICOLON

    COLON  shift, and go to state 23


State 21

    5 declaration: BEGIN_PARAMS param_list END_PARAMS BEGIN_LOCAL_VAR local_list . END_LOCAL_VAR BEGIN_FUNC_BODY body END_FUNC_BODY
   10 local_list: local_list . local

    END_LOCAL_VAR  shift, and go to state 24
    IDENT          shift, and go to state 20

    local  go to state 25


State 22

    9 local_list: local .

    $default  reduce using rule 9 (local_list)


State 23

   11 local: IDENT COLON . INT SEMICOLON

    INT  shift, and go to state 26


State 24

    5 declaration: BEGIN_PARAMS param_list END_PARAMS BEGIN_LOCAL_VAR local_list END_LOCAL_VAR . BEGIN_FUNC_BODY body END_FUNC_BODY

    BEGIN_FUNC_BODY  shift, and go to state 27


State 25

   10 local_list: local_list local .

    $default  reduce using rule 10 (local_list)


State 26

   11 local: IDENT COLON INT . SEMICOLON

    SEMICOLON  shift, and go to state 28


State 27

    5 declaration: BEGIN_PARAMS param_list END_PARAMS BEGIN_LOCAL_VAR local_list END_LOCAL_VAR BEGIN_FUNC_BODY . body END_FUNC_BODY

    RETURN  shift, and go to state 29
    WHILE   shift, and go to state 30
    IF      shift, and go to state 31
    IDENT   shift, and go to state 32
    READ    shift, and go to state 33
    WRITE   shift, and go to state 34

    body              go to state 35
    statement_list    go to state 36
    statement         go to state 37
    if_statement      go to state 38
    while_statement   go to state 39
    assignment        go to state 40
    output            go to state 41
    input             go to state 42
    return_statement  go to state 43


State 28

   11 local: IDENT COLON INT SEMICOLON .

    $default  reduce using rule 11 (local)


State 29

   42 return_statement: RETURN . exp SEMICOLON

    NUM         shift, and go to state 44
    LEFT_PAREN  shift, and go to state 45
    IDENT       shift, and go to state 46

    exp     go to state 47
    term    go to state 48
    factor  go to state 49


State 30

   22 while_statement: WHILE . LEFT_PAREN exp RIGHT_PAREN BEGIN_LOOP statement_list END_LOOP SEMICOLON

    LEFT_PAREN  shift, and go to state 50


State 31

   21 if_statement: IF . LEFT_PAREN exp RIGHT_PAREN THEN statement SEMICOLON END_IF SEMICOLON

    LEFT_PAREN  shift, and go to state 51


State 32

   23 assignment: IDENT . ASSIGN exp SEMICOLON

    ASSIGN  shift, and go to state 52


State 33

   25 input: READ . IDENT SEMICOLON

    IDENT  shift, and go to state 53


State 34

   24 output: WRITE . exp SEMICOLON

    NUM         shift, and go to state 44
    LEFT_PAREN  shift, and go to state 45
    IDENT       shift, and go to state 46

    exp     go to state 54
    term    go to state 48
    factor  go to state 49


State 35

    5 declaration: BEGIN_PARAMS param_list END_PARAMS BEGIN_LOCAL_VAR local_list END_LOCAL_VAR BEGIN_FUNC_BODY body . END_FUNC_BODY

    END_FUNC_BODY  shift, and go to state 55


State 36

   12 body: statement_list .
   14 statement_list: statement_list . statement

    RETURN  shift, and go to state 29
    WHILE   shift, and go to state 30
    IF      shift, and go to state 31
    IDENT   shift, and go to state 32
    READ    shift, and go to state 33
    WRITE   shift, and go to state 34

    $default  reduce using rule 12 (body)

    statement         go to state 56
    if_statement      go to state 38
    while_statement   go to state 39
    assignment        go to state 40
    output            go to state 41
    input             go to state 42
    return_statement  go to state 43


State 37

   13 statement_list: statement .

    $default  reduce using rule 13 (statement_list)


State 38

   15 statement: if_statement .

    $default  reduce using rule 15 (statement)


State 39

   16 statement: while_statement .

    $default  reduce using rule 16 (statement)


State 40

   17 statement: assignment .

    $default  reduce using rule 17 (statement)


State 41

   18 statement: output .

    $default  reduce using rule 18 (statement)


State 42

   19 statement: input .

    $default  reduce using rule 19 (statement)


State 43

   20 statement: return_statement .

    $default  reduce using rule 20 (statement)


State 44

   40 factor: NUM .

    $default  reduce using rule 40 (factor)


State 45

   39 factor: LEFT_PAREN . exp RIGHT_PAREN

    NUM         shift, and go to state 44
    LEFT_PAREN  shift, and go to state 45
    IDENT       shift, and go to state 46

    exp     go to state 57
    term    go to state 48
    factor  go to state 49


State 46

   41 factor: IDENT .

    $default  reduce using rule 41 (factor)


State 47

   26 exp: exp . compare term
   42 return_statement: RETURN exp . SEMICOLON

    EQUAL          shift, and go to state 58
    SEMICOLON      shift, and go to state 59
    LESS_THAN      shift, and go to state 60
    LESS_THAN_EQ   shift, and go to state 61
    GREAT_THAN     shift, and go to state 62
    GREAT_THAN_EQ  shift, and go to state 63
    NOT_EQ         shift, and go to state 64

    compare  go to state 65


State 48

   27 exp: term .
   34 term: term . addop factor

    PLUS         shift, and go to state 66
    MINUS        shift, and go to state 67
    UNARY_MINUS  shift, and go to state 68

    $default  reduce using rule 27 (exp)

    addop  go to state 69


State 49

   35 term: factor .

    $default  reduce using rule 35 (term)


State 50

   22 while_statement: WHILE LEFT_PAREN . exp RIGHT_PAREN BEGIN_LOOP statement_list END_LOOP SEMICOLON

    NUM         shift, and go to state 44
    LEFT_PAREN  shift, and go to state 45
    IDENT       shift, and go to state 46

    exp     go to state 70
    term    go to state 48
    factor  go to state 49


State 51

   21 if_statement: IF LEFT_PAREN . exp RIGHT_PAREN THEN statement SEMICOLON END_IF SEMICOLON

    NUM         shift, and go to state 44
    LEFT_PAREN  shift, and go to state 45
    IDENT       shift, and go to state 46

    exp     go to state 71
    term    go to state 48
    factor  go to state 49


State 52

   23 assignment: IDENT ASSIGN . exp SEMICOLON

    NUM         shift, and go to state 44
    LEFT_PAREN  shift, and go to state 45
    IDENT       shift, and go to state 46

    exp     go to state 72
    term    go to state 48
    factor  go to state 49


State 53

   25 input: READ IDENT . SEMICOLON

    SEMICOLON  shift, and go to state 73


State 54

   24 output: WRITE exp . SEMICOLON
   26 exp: exp . compare term

    EQUAL          shift, and go to state 58
    SEMICOLON      shift, and go to state 74
    LESS_THAN      shift, and go to state 60
    LESS_THAN_EQ   shift, and go to state 61
    GREAT_THAN     shift, and go to state 62
    GREAT_THAN_EQ  shift, and go to state 63
    NOT_EQ         shift, and go to state 64

    compare  go to state 65


State 55

    5 declaration: BEGIN_PARAMS param_list END_PARAMS BEGIN_LOCAL_VAR local_list END_LOCAL_VAR BEGIN_FUNC_BODY body END_FUNC_BODY .

    $default  reduce using rule 5 (declaration)


State 56

   14 statement_list: statement_list statement .

    $default  reduce using rule 14 (statement_list)


State 57

   26 exp: exp . compare term
   39 factor: LEFT_PAREN exp . RIGHT_PAREN

    RIGHT_PAREN    shift, and go to state 75
    EQUAL          shift, and go to state 58
    LESS_THAN      shift, and go to state 60
    LESS_THAN_EQ   shift, and go to state 61
    GREAT_THAN     shift, and go to state 62
    GREAT_THAN_EQ  shift, and go to state 63
    NOT_EQ         shift, and go to state 64

    compare  go to state 65


State 58

   28 compare: EQUAL .

    $default  reduce using rule 28 (compare)


State 59

   42 return_statement: RETURN exp SEMICOLON .

    $default  reduce using rule 42 (return_statement)


State 60

   29 compare: LESS_THAN .

    $default  reduce using rule 29 (compare)


State 61

   30 compare: LESS_THAN_EQ .

    $default  reduce using rule 30 (compare)


State 62

   31 compare: GREAT_THAN .

    $default  reduce using rule 31 (compare)


State 63

   32 compare: GREAT_THAN_EQ .

    $default  reduce using rule 32 (compare)


State 64

   33 compare: NOT_EQ .

    $default  reduce using rule 33 (compare)


State 65

   26 exp: exp compare . term

    NUM         shift, and go to state 44
    LEFT_PAREN  shift, and go to state 45
    IDENT       shift, and go to state 46

    term    go to state 76
    factor  go to state 49


State 66

   36 addop: PLUS .

    $default  reduce using rule 36 (addop)


State 67

   37 addop: MINUS .

    $default  reduce using rule 37 (addop)


State 68

   38 addop: UNARY_MINUS .

    $default  reduce using rule 38 (addop)


State 69

   34 term: term addop . factor

    NUM         shift, and go to state 44
    LEFT_PAREN  shift, and go to state 45
    IDENT       shift, and go to state 46

    factor  go to state 77


State 70

   22 while_statement: WHILE LEFT_PAREN exp . RIGHT_PAREN BEGIN_LOOP statement_list END_LOOP SEMICOLON
   26 exp: exp . compare term

    RIGHT_PAREN    shift, and go to state 78
    EQUAL          shift, and go to state 58
    LESS_THAN      shift, and go to state 60
    LESS_THAN_EQ   shift, and go to state 61
    GREAT_THAN     shift, and go to state 62
    GREAT_THAN_EQ  shift, and go to state 63
    NOT_EQ         shift, and go to state 64

    compare  go to state 65


State 71

   21 if_statement: IF LEFT_PAREN exp . RIGHT_PAREN THEN statement SEMICOLON END_IF SEMICOLON
   26 exp: exp . compare term

    RIGHT_PAREN    shift, and go to state 79
    EQUAL          shift, and go to state 58
    LESS_THAN      shift, and go to state 60
    LESS_THAN_EQ   shift, and go to state 61
    GREAT_THAN     shift, and go to state 62
    GREAT_THAN_EQ  shift, and go to state 63
    NOT_EQ         shift, and go to state 64

    compare  go to state 65


State 72

   23 assignment: IDENT ASSIGN exp . SEMICOLON
   26 exp: exp . compare term

    EQUAL          shift, and go to state 58
    SEMICOLON      shift, and go to state 80
    LESS_THAN      shift, and go to state 60
    LESS_THAN_EQ   shift, and go to state 61
    GREAT_THAN     shift, and go to state 62
    GREAT_THAN_EQ  shift, and go to state 63
    NOT_EQ         shift, and go to state 64

    compare  go to state 65


State 73

   25 input: READ IDENT SEMICOLON .

    $default  reduce using rule 25 (input)


State 74

   24 output: WRITE exp SEMICOLON .

    $default  reduce using rule 24 (output)


State 75

   39 factor: LEFT_PAREN exp RIGHT_PAREN .

    $default  reduce using rule 39 (factor)


State 76

   26 exp: exp compare term .
   34 term: term . addop factor

    PLUS         shift, and go to state 66
    MINUS        shift, and go to state 67
    UNARY_MINUS  shift, and go to state 68

    $default  reduce using rule 26 (exp)

    addop  go to state 69


State 77

   34 term: term addop factor .

    $default  reduce using rule 34 (term)


State 78

   22 while_statement: WHILE LEFT_PAREN exp RIGHT_PAREN . BEGIN_LOOP statement_list END_LOOP SEMICOLON

    BEGIN_LOOP  shift, and go to state 81


State 79

   21 if_statement: IF LEFT_PAREN exp RIGHT_PAREN . THEN statement SEMICOLON END_IF SEMICOLON

    THEN  shift, and go to state 82


State 80

   23 assignment: IDENT ASSIGN exp SEMICOLON .

    $default  reduce using rule 23 (assignment)


State 81

   22 while_statement: WHILE LEFT_PAREN exp RIGHT_PAREN BEGIN_LOOP . statement_list END_LOOP SEMICOLON

    RETURN  shift, and go to state 29
    WHILE   shift, and go to state 30
    IF      shift, and go to state 31
    IDENT   shift, and go to state 32
    READ    shift, and go to state 33
    WRITE   shift, and go to state 34

    statement_list    go to state 83
    statement         go to state 37
    if_statement      go to state 38
    while_statement   go to state 39
    assignment        go to state 40
    output            go to state 41
    input             go to state 42
    return_statement  go to state 43


State 82

   21 if_statement: IF LEFT_PAREN exp RIGHT_PAREN THEN . statement SEMICOLON END_IF SEMICOLON

    RETURN  shift, and go to state 29
    WHILE   shift, and go to state 30
    IF      shift, and go to state 31
    IDENT   shift, and go to state 32
    READ    shift, and go to state 33
    WRITE   shift, and go to state 34

    statement         go to state 84
    if_statement      go to state 38
    while_statement   go to state 39
    assignment        go to state 40
    output            go to state 41
    input             go to state 42
    return_statement  go to state 43


State 83

   14 statement_list: statement_list . statement
   22 while_statement: WHILE LEFT_PAREN exp RIGHT_PAREN BEGIN_LOOP statement_list . END_LOOP SEMICOLON

    RETURN    shift, and go to state 29
    WHILE     shift, and go to state 30
    END_LOOP  shift, and go to state 85
    IF        shift, and go to state 31
    IDENT     shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34

    statement         go to state 56
    if_statement      go to state 38
    while_statement   go to state 39
    assignment        go to state 40
    output            go to state 41
    input             go to state 42
    return_statement  go to state 43


State 84

   21 if_statement: IF LEFT_PAREN exp RIGHT_PAREN THEN statement . SEMICOLON END_IF SEMICOLON

    SEMICOLON  shift, and go to state 86


State 85

   22 while_statement: WHILE LEFT_PAREN exp RIGHT_PAREN BEGIN_LOOP statement_list END_LOOP . SEMICOLON

    SEMICOLON  shift, and go to state 87


State 86

   21 if_statement: IF LEFT_PAREN exp RIGHT_PAREN THEN statement SEMICOLON . END_IF SEMICOLON

    END_IF  shift, and go to state 88


State 87

   22 while_statement: WHILE LEFT_PAREN exp RIGHT_PAREN BEGIN_LOOP statement_list END_LOOP SEMICOLON .

    $default  reduce using rule 22 (while_statement)


State 88

   21 if_statement: IF LEFT_PAREN exp RIGHT_PAREN THEN statement SEMICOLON END_IF . SEMICOLON

    SEMICOLON  shift, and go to state 89


State 89

   21 if_statement: IF LEFT_PAREN exp RIGHT_PAREN THEN statement SEMICOLON END_IF SEMICOLON .

    $default  reduce using rule 21 (if_statement)
