Terminals unused in grammar

   TRUE
   FALSE
   EQUALS
   ARRAY
   TYPE


State 20 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog_start $end

    1 prog_start: %empty
    2           | func

    3 func: FUNCTION IDENT SEMICOLON declaration
    4     | func FUNCTION IDENT SEMICOLON declaration

    5 declaration: BEGIN_PARAMS param_list END_PARAMS BEGIN_LOCAL_VAR local_list END_LOCAL_VAR BEGIN_FUNC_BODY body END_FUNC_BODY

    6 param_list: param
    7           | param_list COMMA param
    8           | %empty

    9 param: IDENT COLON INT SEMICOLON

   10 local_list: local
   11           | local_list local
   12           | %empty

   13 local: IDENT COLON INT SEMICOLON

   14 body: statement_list
   15     | %empty

   16 statement_list: statement
   17               | statement_list statement

   18 statement: if_statement
   19          | while_statement
   20          | assignment
   21          | output
   22          | input
   23          | return_statement

   24 if_statement: IF LEFT_PAREN exp RIGHT_PAREN THEN statement END_IF SEMICOLON

   25 while_statement: WHILE LEFT_PAREN exp RIGHT_PAREN BEGIN_LOOP statement_list END_LOOP SEMICOLON

   26 assignment: IDENT ASSIGN exp SEMICOLON

   27 output: WRITE IDENT SEMICOLON

   28 input: READ IDENT SEMICOLON

   29 exp: exp compare term
   30    | term

   31 compare: EQUAL
   32        | LESS_THAN
   33        | LESS_THAN_EQ
   34        | GREAT_THAN
   35        | GREAT_THAN_EQ
   36        | NOT_EQ

   37 term: term addop factor
   38     | term mullop factor
   39     | factor

   40 addop: PLUS
   41      | MINUS
   42      | UNARY_MINUS

   43 mullop: MULT
   44       | DIV

   45 factor: LEFT_PAREN exp RIGHT_PAREN
   46       | NUM
   47       | IDENT
   48       | func_name

   49 return_statement: RETURN exp SEMICOLON

   50 func_name: IDENT LEFT_PAREN exp RIGHT_PAREN


Terminals, with rules where they appear

$end (0) 0
error (256)
NUM (258) 46
PLUS (259) 40
MINUS (260) 41
MULT (261) 43
DIV (262) 44
LEFT_PAREN (263) 24 25 45 50
RIGHT_PAREN (264) 24 25 45 50
EQUAL (265) 31
SEMICOLON (266) 3 4 9 13 24 25 26 27 28 49
COLON (267) 9 13
TRUE (268)
FALSE (269)
LESS_THAN (270) 32
LESS_THAN_EQ (271) 33
GREAT_THAN (272) 34
GREAT_THAN_EQ (273) 35
NOT_EQ (274) 36
INT (275) 9 13
EQUALS (276)
ARRAY (277)
FUNCTION (278) 3 4
RETURN (279) 49
ASSIGN (280) 26
TYPE (281)
WHILE (282) 25
BEGIN_LOOP (283) 25
END_LOOP (284) 25
BEGIN_PARAMS (285) 5
END_PARAMS (286) 5
BEGIN_FUNC_BODY (287) 5
END_FUNC_BODY (288) 5
BEGIN_LOCAL_VAR (289) 5
END_LOCAL_VAR (290) 5
IF (291) 24
THEN (292) 24
END_IF (293) 24
IDENT (294) 3 4 9 13 26 27 28 47 50
READ (295) 28
WRITE (296) 27
COMMA (297) 7
UNARY_MINUS (298) 42
IF_PREC (299)


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
prog_start (46)
    on left: 1 2, on right: 0
func (47)
    on left: 3 4, on right: 2 4
declaration (48)
    on left: 5, on right: 3 4
param_list (49)
    on left: 6 7 8, on right: 5 7
param (50)
    on left: 9, on right: 6 7
local_list (51)
    on left: 10 11 12, on right: 5 11
local (52)
    on left: 13, on right: 10 11
body (53)
    on left: 14 15, on right: 5
statement_list (54)
    on left: 16 17, on right: 14 17 25
statement (55)
    on left: 18 19 20 21 22 23, on right: 16 17 24
if_statement (56)
    on left: 24, on right: 18
while_statement (57)
    on left: 25, on right: 19
assignment (58)
    on left: 26, on right: 20
output (59)
    on left: 27, on right: 21
input (60)
    on left: 28, on right: 22
exp (61)
    on left: 29 30, on right: 24 25 26 29 45 49 50
compare (62)
    on left: 31 32 33 34 35 36, on right: 29
term (63)
    on left: 37 38 39, on right: 29 30 37 38
addop (64)
    on left: 40 41 42, on right: 37
mullop (65)
    on left: 43 44, on right: 38
factor (66)
    on left: 45 46 47 48, on right: 37 38 39
return_statement (67)
    on left: 49, on right: 23
func_name (68)
    on left: 50, on right: 48


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (prog_start)

    prog_start  go to state 2
    func        go to state 3


State 1

    3 func: FUNCTION . IDENT SEMICOLON declaration

    IDENT  shift, and go to state 4


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 5


State 3

    2 prog_start: func .
    4 func: func . FUNCTION IDENT SEMICOLON declaration

    FUNCTION  shift, and go to state 6

    $default  reduce using rule 2 (prog_start)


State 4

    3 func: FUNCTION IDENT . SEMICOLON declaration

    SEMICOLON  shift, and go to state 7


State 5

    0 $accept: prog_start $end .

    $default  accept


State 6

    4 func: func FUNCTION . IDENT SEMICOLON declaration

    IDENT  shift, and go to state 8


State 7

    3 func: FUNCTION IDENT SEMICOLON . declaration

    BEGIN_PARAMS  shift, and go to state 9

    declaration  go to state 10


State 8

    4 func: func FUNCTION IDENT . SEMICOLON declaration

    SEMICOLON  shift, and go to state 11


State 9

    5 declaration: BEGIN_PARAMS . param_list END_PARAMS BEGIN_LOCAL_VAR local_list END_LOCAL_VAR BEGIN_FUNC_BODY body END_FUNC_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 8 (param_list)

    param_list  go to state 13
    param       go to state 14


State 10

    3 func: FUNCTION IDENT SEMICOLON declaration .

    $default  reduce using rule 3 (func)


State 11

    4 func: func FUNCTION IDENT SEMICOLON . declaration

    BEGIN_PARAMS  shift, and go to state 9

    declaration  go to state 15


State 12

    9 param: IDENT . COLON INT SEMICOLON

    COLON  shift, and go to state 16


State 13

    5 declaration: BEGIN_PARAMS param_list . END_PARAMS BEGIN_LOCAL_VAR local_list END_LOCAL_VAR BEGIN_FUNC_BODY body END_FUNC_BODY
    7 param_list: param_list . COMMA param

    END_PARAMS  shift, and go to state 17
    COMMA       shift, and go to state 18


State 14

    6 param_list: param .

    $default  reduce using rule 6 (param_list)


State 15

    4 func: func FUNCTION IDENT SEMICOLON declaration .

    $default  reduce using rule 4 (func)


State 16

    9 param: IDENT COLON . INT SEMICOLON

    INT  shift, and go to state 19


State 17

    5 declaration: BEGIN_PARAMS param_list END_PARAMS . BEGIN_LOCAL_VAR local_list END_LOCAL_VAR BEGIN_FUNC_BODY body END_FUNC_BODY

    BEGIN_LOCAL_VAR  shift, and go to state 20


State 18

    7 param_list: param_list COMMA . param

    IDENT  shift, and go to state 12

    param  go to state 21


State 19

    9 param: IDENT COLON INT . SEMICOLON

    SEMICOLON  shift, and go to state 22


State 20

    5 declaration: BEGIN_PARAMS param_list END_PARAMS BEGIN_LOCAL_VAR . local_list END_LOCAL_VAR BEGIN_FUNC_BODY body END_FUNC_BODY

    IDENT  shift, and go to state 23

    IDENT     [reduce using rule 12 (local_list)]
    $default  reduce using rule 12 (local_list)

    local_list  go to state 24
    local       go to state 25


State 21

    7 param_list: param_list COMMA param .

    $default  reduce using rule 7 (param_list)


State 22

    9 param: IDENT COLON INT SEMICOLON .

    $default  reduce using rule 9 (param)


State 23

   13 local: IDENT . COLON INT SEMICOLON

    COLON  shift, and go to state 26


State 24

    5 declaration: BEGIN_PARAMS param_list END_PARAMS BEGIN_LOCAL_VAR local_list . END_LOCAL_VAR BEGIN_FUNC_BODY body END_FUNC_BODY
   11 local_list: local_list . local

    END_LOCAL_VAR  shift, and go to state 27
    IDENT          shift, and go to state 23

    local  go to state 28


State 25

   10 local_list: local .

    $default  reduce using rule 10 (local_list)


State 26

   13 local: IDENT COLON . INT SEMICOLON

    INT  shift, and go to state 29


State 27

    5 declaration: BEGIN_PARAMS param_list END_PARAMS BEGIN_LOCAL_VAR local_list END_LOCAL_VAR . BEGIN_FUNC_BODY body END_FUNC_BODY

    BEGIN_FUNC_BODY  shift, and go to state 30


State 28

   11 local_list: local_list local .

    $default  reduce using rule 11 (local_list)


State 29

   13 local: IDENT COLON INT . SEMICOLON

    SEMICOLON  shift, and go to state 31


State 30

    5 declaration: BEGIN_PARAMS param_list END_PARAMS BEGIN_LOCAL_VAR local_list END_LOCAL_VAR BEGIN_FUNC_BODY . body END_FUNC_BODY

    RETURN  shift, and go to state 32
    WHILE   shift, and go to state 33
    IF      shift, and go to state 34
    IDENT   shift, and go to state 35
    READ    shift, and go to state 36
    WRITE   shift, and go to state 37

    $default  reduce using rule 15 (body)

    body              go to state 38
    statement_list    go to state 39
    statement         go to state 40
    if_statement      go to state 41
    while_statement   go to state 42
    assignment        go to state 43
    output            go to state 44
    input             go to state 45
    return_statement  go to state 46


State 31

   13 local: IDENT COLON INT SEMICOLON .

    $default  reduce using rule 13 (local)


State 32

   49 return_statement: RETURN . exp SEMICOLON

    NUM         shift, and go to state 47
    LEFT_PAREN  shift, and go to state 48
    IDENT       shift, and go to state 49

    exp        go to state 50
    term       go to state 51
    factor     go to state 52
    func_name  go to state 53


State 33

   25 while_statement: WHILE . LEFT_PAREN exp RIGHT_PAREN BEGIN_LOOP statement_list END_LOOP SEMICOLON

    LEFT_PAREN  shift, and go to state 54


State 34

   24 if_statement: IF . LEFT_PAREN exp RIGHT_PAREN THEN statement END_IF SEMICOLON

    LEFT_PAREN  shift, and go to state 55


State 35

   26 assignment: IDENT . ASSIGN exp SEMICOLON

    ASSIGN  shift, and go to state 56


State 36

   28 input: READ . IDENT SEMICOLON

    IDENT  shift, and go to state 57


State 37

   27 output: WRITE . IDENT SEMICOLON

    IDENT  shift, and go to state 58


State 38

    5 declaration: BEGIN_PARAMS param_list END_PARAMS BEGIN_LOCAL_VAR local_list END_LOCAL_VAR BEGIN_FUNC_BODY body . END_FUNC_BODY

    END_FUNC_BODY  shift, and go to state 59


State 39

   14 body: statement_list .
   17 statement_list: statement_list . statement

    RETURN  shift, and go to state 32
    WHILE   shift, and go to state 33
    IF      shift, and go to state 34
    IDENT   shift, and go to state 35
    READ    shift, and go to state 36
    WRITE   shift, and go to state 37

    $default  reduce using rule 14 (body)

    statement         go to state 60
    if_statement      go to state 41
    while_statement   go to state 42
    assignment        go to state 43
    output            go to state 44
    input             go to state 45
    return_statement  go to state 46


State 40

   16 statement_list: statement .

    $default  reduce using rule 16 (statement_list)


State 41

   18 statement: if_statement .

    $default  reduce using rule 18 (statement)


State 42

   19 statement: while_statement .

    $default  reduce using rule 19 (statement)


State 43

   20 statement: assignment .

    $default  reduce using rule 20 (statement)


State 44

   21 statement: output .

    $default  reduce using rule 21 (statement)


State 45

   22 statement: input .

    $default  reduce using rule 22 (statement)


State 46

   23 statement: return_statement .

    $default  reduce using rule 23 (statement)


State 47

   46 factor: NUM .

    $default  reduce using rule 46 (factor)


State 48

   45 factor: LEFT_PAREN . exp RIGHT_PAREN

    NUM         shift, and go to state 47
    LEFT_PAREN  shift, and go to state 48
    IDENT       shift, and go to state 49

    exp        go to state 61
    term       go to state 51
    factor     go to state 52
    func_name  go to state 53


State 49

   47 factor: IDENT .
   50 func_name: IDENT . LEFT_PAREN exp RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 62

    $default  reduce using rule 47 (factor)


State 50

   29 exp: exp . compare term
   49 return_statement: RETURN exp . SEMICOLON

    EQUAL          shift, and go to state 63
    SEMICOLON      shift, and go to state 64
    LESS_THAN      shift, and go to state 65
    LESS_THAN_EQ   shift, and go to state 66
    GREAT_THAN     shift, and go to state 67
    GREAT_THAN_EQ  shift, and go to state 68
    NOT_EQ         shift, and go to state 69

    compare  go to state 70


State 51

   30 exp: term .
   37 term: term . addop factor
   38     | term . mullop factor

    PLUS         shift, and go to state 71
    MINUS        shift, and go to state 72
    MULT         shift, and go to state 73
    DIV          shift, and go to state 74
    UNARY_MINUS  shift, and go to state 75

    $default  reduce using rule 30 (exp)

    addop   go to state 76
    mullop  go to state 77


State 52

   39 term: factor .

    $default  reduce using rule 39 (term)


State 53

   48 factor: func_name .

    $default  reduce using rule 48 (factor)


State 54

   25 while_statement: WHILE LEFT_PAREN . exp RIGHT_PAREN BEGIN_LOOP statement_list END_LOOP SEMICOLON

    NUM         shift, and go to state 47
    LEFT_PAREN  shift, and go to state 48
    IDENT       shift, and go to state 49

    exp        go to state 78
    term       go to state 51
    factor     go to state 52
    func_name  go to state 53


State 55

   24 if_statement: IF LEFT_PAREN . exp RIGHT_PAREN THEN statement END_IF SEMICOLON

    NUM         shift, and go to state 47
    LEFT_PAREN  shift, and go to state 48
    IDENT       shift, and go to state 49

    exp        go to state 79
    term       go to state 51
    factor     go to state 52
    func_name  go to state 53


State 56

   26 assignment: IDENT ASSIGN . exp SEMICOLON

    NUM         shift, and go to state 47
    LEFT_PAREN  shift, and go to state 48
    IDENT       shift, and go to state 49

    exp        go to state 80
    term       go to state 51
    factor     go to state 52
    func_name  go to state 53


State 57

   28 input: READ IDENT . SEMICOLON

    SEMICOLON  shift, and go to state 81


State 58

   27 output: WRITE IDENT . SEMICOLON

    SEMICOLON  shift, and go to state 82


State 59

    5 declaration: BEGIN_PARAMS param_list END_PARAMS BEGIN_LOCAL_VAR local_list END_LOCAL_VAR BEGIN_FUNC_BODY body END_FUNC_BODY .

    $default  reduce using rule 5 (declaration)


State 60

   17 statement_list: statement_list statement .

    $default  reduce using rule 17 (statement_list)


State 61

   29 exp: exp . compare term
   45 factor: LEFT_PAREN exp . RIGHT_PAREN

    RIGHT_PAREN    shift, and go to state 83
    EQUAL          shift, and go to state 63
    LESS_THAN      shift, and go to state 65
    LESS_THAN_EQ   shift, and go to state 66
    GREAT_THAN     shift, and go to state 67
    GREAT_THAN_EQ  shift, and go to state 68
    NOT_EQ         shift, and go to state 69

    compare  go to state 70


State 62

   50 func_name: IDENT LEFT_PAREN . exp RIGHT_PAREN

    NUM         shift, and go to state 47
    LEFT_PAREN  shift, and go to state 48
    IDENT       shift, and go to state 49

    exp        go to state 84
    term       go to state 51
    factor     go to state 52
    func_name  go to state 53


State 63

   31 compare: EQUAL .

    $default  reduce using rule 31 (compare)


State 64

   49 return_statement: RETURN exp SEMICOLON .

    $default  reduce using rule 49 (return_statement)


State 65

   32 compare: LESS_THAN .

    $default  reduce using rule 32 (compare)


State 66

   33 compare: LESS_THAN_EQ .

    $default  reduce using rule 33 (compare)


State 67

   34 compare: GREAT_THAN .

    $default  reduce using rule 34 (compare)


State 68

   35 compare: GREAT_THAN_EQ .

    $default  reduce using rule 35 (compare)


State 69

   36 compare: NOT_EQ .

    $default  reduce using rule 36 (compare)


State 70

   29 exp: exp compare . term

    NUM         shift, and go to state 47
    LEFT_PAREN  shift, and go to state 48
    IDENT       shift, and go to state 49

    term       go to state 85
    factor     go to state 52
    func_name  go to state 53


State 71

   40 addop: PLUS .

    $default  reduce using rule 40 (addop)


State 72

   41 addop: MINUS .

    $default  reduce using rule 41 (addop)


State 73

   43 mullop: MULT .

    $default  reduce using rule 43 (mullop)


State 74

   44 mullop: DIV .

    $default  reduce using rule 44 (mullop)


State 75

   42 addop: UNARY_MINUS .

    $default  reduce using rule 42 (addop)


State 76

   37 term: term addop . factor

    NUM         shift, and go to state 47
    LEFT_PAREN  shift, and go to state 48
    IDENT       shift, and go to state 49

    factor     go to state 86
    func_name  go to state 53


State 77

   38 term: term mullop . factor

    NUM         shift, and go to state 47
    LEFT_PAREN  shift, and go to state 48
    IDENT       shift, and go to state 49

    factor     go to state 87
    func_name  go to state 53


State 78

   25 while_statement: WHILE LEFT_PAREN exp . RIGHT_PAREN BEGIN_LOOP statement_list END_LOOP SEMICOLON
   29 exp: exp . compare term

    RIGHT_PAREN    shift, and go to state 88
    EQUAL          shift, and go to state 63
    LESS_THAN      shift, and go to state 65
    LESS_THAN_EQ   shift, and go to state 66
    GREAT_THAN     shift, and go to state 67
    GREAT_THAN_EQ  shift, and go to state 68
    NOT_EQ         shift, and go to state 69

    compare  go to state 70


State 79

   24 if_statement: IF LEFT_PAREN exp . RIGHT_PAREN THEN statement END_IF SEMICOLON
   29 exp: exp . compare term

    RIGHT_PAREN    shift, and go to state 89
    EQUAL          shift, and go to state 63
    LESS_THAN      shift, and go to state 65
    LESS_THAN_EQ   shift, and go to state 66
    GREAT_THAN     shift, and go to state 67
    GREAT_THAN_EQ  shift, and go to state 68
    NOT_EQ         shift, and go to state 69

    compare  go to state 70


State 80

   26 assignment: IDENT ASSIGN exp . SEMICOLON
   29 exp: exp . compare term

    EQUAL          shift, and go to state 63
    SEMICOLON      shift, and go to state 90
    LESS_THAN      shift, and go to state 65
    LESS_THAN_EQ   shift, and go to state 66
    GREAT_THAN     shift, and go to state 67
    GREAT_THAN_EQ  shift, and go to state 68
    NOT_EQ         shift, and go to state 69

    compare  go to state 70


State 81

   28 input: READ IDENT SEMICOLON .

    $default  reduce using rule 28 (input)


State 82

   27 output: WRITE IDENT SEMICOLON .

    $default  reduce using rule 27 (output)


State 83

   45 factor: LEFT_PAREN exp RIGHT_PAREN .

    $default  reduce using rule 45 (factor)


State 84

   29 exp: exp . compare term
   50 func_name: IDENT LEFT_PAREN exp . RIGHT_PAREN

    RIGHT_PAREN    shift, and go to state 91
    EQUAL          shift, and go to state 63
    LESS_THAN      shift, and go to state 65
    LESS_THAN_EQ   shift, and go to state 66
    GREAT_THAN     shift, and go to state 67
    GREAT_THAN_EQ  shift, and go to state 68
    NOT_EQ         shift, and go to state 69

    compare  go to state 70


State 85

   29 exp: exp compare term .
   37 term: term . addop factor
   38     | term . mullop factor

    PLUS         shift, and go to state 71
    MINUS        shift, and go to state 72
    MULT         shift, and go to state 73
    DIV          shift, and go to state 74
    UNARY_MINUS  shift, and go to state 75

    $default  reduce using rule 29 (exp)

    addop   go to state 76
    mullop  go to state 77


State 86

   37 term: term addop factor .

    $default  reduce using rule 37 (term)


State 87

   38 term: term mullop factor .

    $default  reduce using rule 38 (term)


State 88

   25 while_statement: WHILE LEFT_PAREN exp RIGHT_PAREN . BEGIN_LOOP statement_list END_LOOP SEMICOLON

    BEGIN_LOOP  shift, and go to state 92


State 89

   24 if_statement: IF LEFT_PAREN exp RIGHT_PAREN . THEN statement END_IF SEMICOLON

    THEN  shift, and go to state 93


State 90

   26 assignment: IDENT ASSIGN exp SEMICOLON .

    $default  reduce using rule 26 (assignment)


State 91

   50 func_name: IDENT LEFT_PAREN exp RIGHT_PAREN .

    $default  reduce using rule 50 (func_name)


State 92

   25 while_statement: WHILE LEFT_PAREN exp RIGHT_PAREN BEGIN_LOOP . statement_list END_LOOP SEMICOLON

    RETURN  shift, and go to state 32
    WHILE   shift, and go to state 33
    IF      shift, and go to state 34
    IDENT   shift, and go to state 35
    READ    shift, and go to state 36
    WRITE   shift, and go to state 37

    statement_list    go to state 94
    statement         go to state 40
    if_statement      go to state 41
    while_statement   go to state 42
    assignment        go to state 43
    output            go to state 44
    input             go to state 45
    return_statement  go to state 46


State 93

   24 if_statement: IF LEFT_PAREN exp RIGHT_PAREN THEN . statement END_IF SEMICOLON

    RETURN  shift, and go to state 32
    WHILE   shift, and go to state 33
    IF      shift, and go to state 34
    IDENT   shift, and go to state 35
    READ    shift, and go to state 36
    WRITE   shift, and go to state 37

    statement         go to state 95
    if_statement      go to state 41
    while_statement   go to state 42
    assignment        go to state 43
    output            go to state 44
    input             go to state 45
    return_statement  go to state 46


State 94

   17 statement_list: statement_list . statement
   25 while_statement: WHILE LEFT_PAREN exp RIGHT_PAREN BEGIN_LOOP statement_list . END_LOOP SEMICOLON

    RETURN    shift, and go to state 32
    WHILE     shift, and go to state 33
    END_LOOP  shift, and go to state 96
    IF        shift, and go to state 34
    IDENT     shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37

    statement         go to state 60
    if_statement      go to state 41
    while_statement   go to state 42
    assignment        go to state 43
    output            go to state 44
    input             go to state 45
    return_statement  go to state 46


State 95

   24 if_statement: IF LEFT_PAREN exp RIGHT_PAREN THEN statement . END_IF SEMICOLON

    END_IF  shift, and go to state 97


State 96

   25 while_statement: WHILE LEFT_PAREN exp RIGHT_PAREN BEGIN_LOOP statement_list END_LOOP . SEMICOLON

    SEMICOLON  shift, and go to state 98


State 97

   24 if_statement: IF LEFT_PAREN exp RIGHT_PAREN THEN statement END_IF . SEMICOLON

    SEMICOLON  shift, and go to state 99


State 98

   25 while_statement: WHILE LEFT_PAREN exp RIGHT_PAREN BEGIN_LOOP statement_list END_LOOP SEMICOLON .

    $default  reduce using rule 25 (while_statement)


State 99

   24 if_statement: IF LEFT_PAREN exp RIGHT_PAREN THEN statement END_IF SEMICOLON .

    $default  reduce using rule 24 (if_statement)
